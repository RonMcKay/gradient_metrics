name: GitHub Pages

on:
  # Trigger the workflow if a new release got published
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref (Optional)
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    # Do not run multiple runs of this workflow in parallel on the same ref
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        if: github.event.inputs.git-ref == ''

      - name: Check out repository with specific ref
        uses: actions/checkout@v3
        if: github.event.inputs.git-ref != ''
        with:
          ref: ${{ github.event.inputs.git-ref }}

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Build docs
        run: (cd docs/; poetry run make html)

      - name: Deploy docs
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build/html