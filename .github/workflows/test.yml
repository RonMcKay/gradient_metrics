name: Test
on:
  workflow_dispatch:
    inputs:
      ref:
        description: "ref to test"
        required: true
        type: string

  workflow_call:
    inputs:
      ref:
        required: true
        type: string

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: "${{ inputs.ref }}"

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version-file: '.python-version'

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('pyproject.toml', 'poetry.lock') }}-tests

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction --only-root

      - name: Run mypy
        run: poetry run mypy gradient_metrics

      - name: Run Tests with pytest
        run: poetry run pytest --cov

      - name: Build the package
        run: poetry build
