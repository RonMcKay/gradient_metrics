# This is a basic workflow to help you get started with Actions

name: Publish to Test-PyPI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    tags:
      - v**

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-publish:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install Poetry
        run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3

      - name: Add Poetry to path
        run: echo "${HOME}/.poetry/bin" >> $GITHUB_PATH

      - name: Install venv
        run: poetry install

      - name: Lint with flake8
        run: |
          # stop the action if there are syntax errors or undefined variables
          poetry run flake8 . --max-line-length=88 --extend-exclude=.venv,venv --select=E9,F63,F7,F82
          # treat all errors as warnings
          poetry run flake8 . --max-line-length=88 --extend-exclude=.venv,venv --count --statistics

      - name: Run mypy
        run: poetry run mypy gradient_metrics

      - name: Run Tests with pytest
        run: poetry run pytest --cov=gradient_metrics --cov-report=term-missing --cov-fail-under=90 tests

      - name: Add Test-PyPI repository to poetry config
        run: poetry config repositories.testpypi https://test.pypi.org/legacy/

      - name: Add Test-PyPI API token
        run: poetry config pypi-token.testpypi ${{ secrets.TEST_PYPI_API_KEY }}

      - name: Build and publish package to Test-PyPI
        run: poetry publish --build -r testpypi
